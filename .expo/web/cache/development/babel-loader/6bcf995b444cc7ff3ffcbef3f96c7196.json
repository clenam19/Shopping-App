{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from 'expo-font';\nimport AppNavigator from \"./src/navigations/Navigator\";\nimport AppLoading from 'expo-app-loading';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isFontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Bold': require(\"./src/fonts/Montserrat-ExtraBold.otf\"),\n                'Medium': require(\"./src/fonts/Montserrat-Medium.otf\"),\n                'Regular': require(\"./src/fonts/Montserrat-Regular.otf\")\n              }));\n\n            case 2:\n              this.setState({\n                isFontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.isFontLoaded == true ? React.createElement(AppNavigator, null) : React.createElement(AppLoading, null);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n;","map":{"version":3,"sources":["/home/warzone/Shopping-App/App.js"],"names":["StatusBar","React","Font","AppNavigator","AppLoading","App","state","isFontLoaded","loadAsync","require","setState","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAM;AACJC,MAAAA,YAAY,EAAC;AADT,K;;;;;;WAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQL,IAAI,CAACM,SAAL,CAAe;AACnB,wBAASC,OAAO,wCADG;AAEnB,0BAAWA,OAAO,qCAFC;AAGnB,2BAAYA,OAAO;AAHA,eAAf,CADR;;AAAA;AAME,mBAAKC,QAAL,CAAc;AAACH,gBAAAA,YAAY,EAAC;AAAd,eAAd;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAQA,kBAAQ;AACN,aACA,KAAKD,KAAL,CAAWC,YAAX,IAA2B,IAA5B,GAAqC,oBAAC,YAAD,OAArC,GAAuD,oBAAC,UAAD,OADtD;AAGD;;;;EAhB8BN,KAAK,CAACU,S;;SAAlBN,G;AAkBpB","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as Font from 'expo-font';\nimport AppNavigator from './src/navigations/Navigator';\nimport AppLoading from 'expo-app-loading';\n\nexport default class App extends React.Component {\n  state={\n    isFontLoaded:false\n  }\n  async componentDidMount(){\n    await Font.loadAsync({\n      'Bold' : require('./src/fonts/Montserrat-ExtraBold.otf'),\n      'Medium' : require('./src/fonts/Montserrat-Medium.otf'),\n      'Regular' : require('./src/fonts/Montserrat-Regular.otf'),\n    });\n    this.setState({isFontLoaded:true})\n  }\n  render(){\n    return (\n   (this.state.isFontLoaded == true )? (<AppNavigator/>):(<AppLoading />)\n      );\n  }\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}